name: Release
on:
  workflow_call:
    secrets:
      DOCKER_REGISTRY_USERNAME:
        required: true
      DOCKER_REGISTRY_TOKEN:
        required: true
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Check release target commitish
        run: |
          if [[ "${{ github.event.release.target_commitish }}" != ${{ github.event.repository.default_branch }} ]]; then
            echo "::error::Release target commitish is not default branch." && exit 1
          fi
      - name: Check release tag name
        run: |
          if ! [[ "${{ github.event.release.tag_name }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "::error::Release tag name is not semantic." && exit 1
          fi
      - name: Check release name
        run: |
          if [[ "${{ github.event.release.name }}" != "${{ github.event.release.tag_name }}" ]]; then
            echo "::error::Release name is not equal to release tag name." && exit 1
          fi
      - name: Check release type
        run: |
          if [[ "${{ github.event.release.prerelease }}" != false ]]; then
            echo "::error::Release type is prerelease." && exit 1
          fi
      - name: Check release status
        run: |
          if [[ "${{ github.event.release.draft }}" != false ]]; then
            echo "::error::Release status is draft." && exit 1
          fi
      - name: Fetch repository files
        uses: actions/checkout@v4
      - name: Fetch docker file
        uses: actions/checkout@v4
        with:
          repository: jetbuild/.github
          path: .github
      - name: Set docker file path
        run: |
          if [[ "${{ github.event.repository.name }}" == *"-component" ]]; then
            echo "DOCKER_FILE_PATH=.github/docker-files/component.Dockerfile" >> "$GITHUB_ENV"
          fi
      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to docker registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
      - name: Extract docker image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ github.event.repository.full_name }}
          tags: type=semver,pattern={{major}}.{{minor}}.{{patch}}
          flavor: latest=false
      - name: Dockerize
        uses: docker/build-push-action@v5
        with:
          file: ${{ env.DOCKER_FILE_PATH }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          provenance: mode=max
          sbom: true
          platforms: linux/amd64,linux/arm64
      - name: Update docker repository description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
          repository: ${{ github.event.repository.full_name }}
          short-description: ${{ github.event.repository.description }}
